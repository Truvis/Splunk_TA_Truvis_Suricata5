[suricata]
TIME_PREFIX = timestamp":"
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%6Q%z
MAX_TIMESTAMP_LOOKAHEAD = 31
LINE_BREAKER = ([\r\n]+)
SHOULD_LINEMERGE = false
TRUNCATE = 20000
KV_MODE = json
TRANSFORMS-suricata_sourcetyper = sourcetyper

[(?::){0}suricata:*]
EVAL-vendor_product = "Suricata"
FIELDALIAS-src = src_ip AS src
FIELDALIAS-dest = dest_ip AS dest

[suricata:http]
EVAL-app = "suricata"
FIELDALIAS-bytes = http.length AS bytes
FIELDALIAS-cookie = http.set_cookie AS cookie
FIELDALIAS-http_content_type = http.http_content_type AS http_content_type
FIELDALIAS-http_method = http.http_method AS http_method
FIELDALIAS-http_referrer = http.http_refer AS http_referrer
FIELDALIAS-http_user_agent = http.http_user_agent AS http_user_agent
EVAL-http_user_agent_length = len(http_user_agent)
FIELDALIAS-status = http.status AS status 
REPORT-http_uri_info = http_uri_info
EVAL-uri_path = replace(uri_path_pre, "\\\/","/")
EVAL-url = "http://" + 'http.hostname' + 'http.url'
EVAL-url_length = len("http://" + 'http.hostname' + 'http.url')

[suricata:dns]
FIELDALIAS-answer = dns.answers{}.rdata AS answer
EVAL-answer_count = mvcount(answer)
EVAL-message_type = case('dns.type'="query","Query",'dns.type'="answer","Response")
FIELDALIAS-query = dns.rrname AS query
EVAL-query_count = mvcount(query)
FIELDALIAS-record_type = dns.rrtype AS record_type
FIELDALIAS-reply_code = dns.rcode AS reply_code
FIELDALIAS-transaction_id = dns.id AS transaction_id
FIELDALIAS-transport = proto AS transport
FIELDALIAS-ttl = dns.answers{}.ttl AS ttl

[suricata:tls]
FIELDALIAS-transport = proto AS transport
FIELDALIAS-ssl_end_time = tls.notafter AS ssl_end_time
FIELDALIAS-ssl_issuer = tls.issuerdn AS ssl_issuer
EXTRACT-ssl_issuer_common_name = ^{[^{]+{[^:]+:[^:].*?issuerdn":".*?CN=(?<ssl_issuer_common_name>[^",\\]+)
EXTRACT-ssl_issuer_email = ^{[^{]+{[^:]+:[^:].*?issuerdn":".*?emailAddress=(?<ssl_issuer_email>[^",\\]+)
EXTRACT-ssl_issuer_locality = ^{[^{]+{[^:]+:[^:].*?issuerdn":".*?L=(?<ssl_issuer_locality>[^",\\]+)
EXTRACT-ssl_issuer_organization = ^{[^{]+{[^:]+:[^:].*?issuerdn":".*?O=(?<ssl_issuer_organization>[^",\\]+)
EXTRACT-ssl_issuer_state = ^{[^{]+{[^:]+:[^:].*?issuerdn":".*?ST=(?<ssl_issuer_state>[^",\\]+)
EXTRACT-ssl_issuer_unit = ^{[^{]+{[^:]+:[^:].*?issuerdn":".*?OU=(?<ssl_issuer_unit>[^",]+) #######
FIELDALIAS-ssl_publickey = tls.fingerprint AS ssl_publickey
FIELDALIAS-ssl_serial = tls.serial AS ssl_serial
FIELDALIAS-ssl_start_time = tls.notbefore AS ssl_start_time
EXTRACT-ssl_subject_common_name = ^{[^{]+{[^:]+:[^:].*?CN=(?<ssl_subject_common_name>[^",\\]+)
EXTRACT-ssl_subject_email = ^{[^{]+{[^:]+:[^:].*?emailAddress=(?<ssl_subject_email>[^",\\]+)
EXTRACT-ssl_subject_locality = ^{[^{]+{[^:]+:[^:].*?L=(?<ssl_subject_locality>[^",\\]+)
EXTRACT-ssl_subject_organization = ^{[^{]+{[^:]+:[^:].*?O=(?<ssl_subject_organization>[^",\\]+)
EXTRACT-ssl_subject_state = ^{[^{]+{[^:]+:[^:].*?ST=(?<ssl_subject_state>[^",\\]+)
EXTRACT-ssl_subject_unit = ^{[^{]+{[^:]+:[^:].*?OU=(?<ssl_subject_unit>[^",\\]+)
EVAL-ssl_validity_window = floor(strptime('tls.notafter', "%Y-%m-%dT%H:%M:%S") - strptime('tls.notbefore', "%Y-%m-%dT%H:%M:%S"))
FIELDALIAS-ssl_version = tls.version AS ssl_version

[suricata:flow]
#Bidirectional records
FIELDALIAS-app = app_proto AS app
EVAL-app = if(app=="failed","unknown",app)
FIELDALIAS-bytes_in = flow.bytes_toclient AS bytes_in 
FIELDALIAS-bytes_out = flow.bytes_toserver AS bytes_out
EVAL-bytes = bytes_in + bytes_out
FIELDALIAS-duration = flow.age AS duration 
FIELDALIAS-packets_in = flow.pkts_toclient AS packets_in 
FIELDALIAS-packets_out = flow.pkts_toserver AS packets_out 
EVAL-packets = packets_in + packets_out
FIELDALIAS-protocol = proto AS protocol
FIELDALIAS-tcp_flags = tcp.tcp_flags AS tcp_flag_hex
LOOKUP-tcp_flag = tcp_flag tcp_flag_hex OUTPUT tcp_flag
LOOKUP-tcp_flag_tc = tcp_flag tcp_flag_hex AS tcp_flag_hex_to_client OUTPUT tcp_flag AS tcp_flag_to_client
LOOKUP-tcp_flag_ts = tcp_flag tcp_flag_hex AS tcp_flag_hex_to_server OUTPUT tcp_flag AS tcp_flag_to_server

[suricata:netflow]
#Unidirectional records
FIELDALIAS-app = app_proto AS app
EVAL-app = if(app=="failed","unknown",app)
FIELDALIAS-bytes = netflow.bytes AS bytes
FIELDALIAS-packets = netflow.pkts AS packets
FIELDALIAS-duration = netflow.age AS duration 
FIELDALIAS-duration = netflow.age AS duration 
FIELDALIAS-protocol = proto AS protocol
FIELDALIAS-tcp_flags = tcp.tcp_flags AS tcp_flag_hex
LOOKUP-tcp_flag = tcp_flag tcp_flag_hex OUTPUT tcp_flag
LOOKUP-tcp_flag_tc = tcp_flag tcp_flag_hex AS tcp_flag_hex_to_client OUTPUT tcp_flag AS tcp_flag_to_client
LOOKUP-tcp_flag_ts = tcp_flag tcp_flag_hex AS tcp_flag_hex_to_server OUTPUT tcp_flag AS tcp_flag_to_server

[suricata:dhcp]
FIELDALIAS-dest_mac = dhcp.client_mac AS dest_mac
FIELDALIAS-signature = dhcp.dhcp_type AS signature
FIELDALIAS-lease_duration = dhcp.lease_time AS lease_duration

[suricata:alert]
FIELDALIAS-action = alert.action AS action
FIELDALIAS-category =  alert.category AS category
FIELDALIAS_dvc = host AS dvc
EVAL-ids_type = "network"
FIELDALIAS-severity_id = alert.severity AS severity_id
EVAL-severity = case(severity_id=0, "N/A", severity_id=1, "high", severity_id=2, "medium", severity_id=3, "low", 1=1, "N/A")
FIELDALIAS-signature =  alert.signature AS signature
FIELDALIAS-transport = proto AS transport